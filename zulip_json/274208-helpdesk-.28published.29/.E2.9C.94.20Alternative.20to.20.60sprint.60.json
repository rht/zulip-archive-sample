[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"n\">julia</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">pipeline</span><span class=\"p\">(</span><span class=\"kt\">IOBuffer</span><span class=\"p\">(</span><span class=\"s\">\"foo bar\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"sb\">`cat`</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">)</span>\n<span class=\"s\">\"foo bar\"</span>\n</code></pre></div>",
        "id": 430923470,
        "sender_full_name": "Gunnar Farneb채ck",
        "timestamp": 1712123260
    },
    {
        "content": "<p>Btw, a <code>seekstart(cin)</code> in your previous example had accomplished the same thing.</p>",
        "id": 430923781,
        "sender_full_name": "Gunnar Farneb채ck",
        "timestamp": 1712123472
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"486849\">Sergio Vargas</span> has marked this topic as resolved.</p>",
        "id": 431118560,
        "sender_full_name": "Notification Bot",
        "timestamp": 1712157752
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"273176\">@Gunnar Farneb채ck</span> . Neither the docs nor the posts I had read on discourse showed that you could simply pass the <code>IOBuffer</code> as an argument. That's much more convenient than the stdio kwargs.</p>",
        "id": 431119839,
        "sender_full_name": "Sergio Vargas",
        "timestamp": 1712158112
    },
    {
        "content": "<p>The <code>pipeline</code> docstring has some hints:</p>\n<blockquote>\n<p><code>pipeline(from, to)</code> is equivalent to <code>pipeline(from, stdout=to)</code> when <code>from</code><br>\n  is a command, and to <code>pipeline(to, stdin=from)</code> when <code>from</code> is another kind of data<br>\n  source.</p>\n</blockquote>",
        "id": 431143908,
        "sender_full_name": "Gunnar Farneb채ck",
        "timestamp": 1712165947
    }
]