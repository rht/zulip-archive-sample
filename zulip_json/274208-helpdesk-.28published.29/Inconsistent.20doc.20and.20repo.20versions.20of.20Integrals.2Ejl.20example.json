[
    {
        "content": "<p>The documentation (<a href=\"https://docs.sciml.ai/Integrals/stable/tutorials/numerical_integrals/\">https://docs.sciml.ai/Integrals/stable/tutorials/numerical_integrals/</a>) has the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Integrals</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Cubature</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Threads</span><span class=\"w\"></span>\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"nd\">@threads</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">dx</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">sin</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"nd\">@view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">])))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">prob</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">IntegralProblem</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"mi\">3</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"n\">batch</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">sol</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">,</span><span class=\"n\">CubatureJLh</span><span class=\"p\">(),</span><span class=\"n\">reltol</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span><span class=\"n\">abstol</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the repo (<a href=\"https://github.com/SciML/Integrals.jl/blob/master/docs/src/tutorials/numerical_integrals.md\">https://github.com/SciML/Integrals.jl/blob/master/docs/src/tutorials/numerical_integrals.md</a>) has:</p>\n<div class=\"codehilite\" data-code-language=\"Julia\"><pre><span></span><code><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">Integrals</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">IntegralsCubature</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">Threads</span><span class=\"w\"></span>\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Threads</span><span class=\"o\">.</span><span class=\"nd\">@threads</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">dx</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">sin</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"nd\">@view</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"o\">:</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">])))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"n\">prob</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">IntegralProblem</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"mi\">3</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"n\">batch</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">sol</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">,</span><span class=\"n\">CubatureJLh</span><span class=\"p\">(),</span><span class=\"n\">reltol</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span><span class=\"n\">abstol</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">sol</span><span class=\"o\">.</span><span class=\"n\">u</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This isn't really an ask for help since it's solved, but it might help others, and I don't really know how to solve the inconsistent .md part of the problem.</p>",
        "id": 307344775,
        "sender_full_name": "Anubhab Haldar",
        "timestamp": 1667318446
    }
]